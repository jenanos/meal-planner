datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Recipe {
  id            String    @id @default(uuid())
  name          String    @unique
  description   String?
  category      String // "FISK" | "VEGETAR" | "KYLLING" | "STORFE" | "ANNET" (valider i API/Zod)
  everydayScore Int
  healthScore   Int
  lastUsed      DateTime?
  usageCount    Int       @default(0)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  ingredients RecipeIngredient[]
  weekEntries WeekPlanEntry[]

  @@index([category])
  @@index([lastUsed])
}

model Ingredient {
  id   String  @id @default(uuid())
  name String  @unique
  unit String?

  recipes RecipeIngredient[]
}

model RecipeIngredient {
  recipeId     String
  ingredientId String

  quantity Decimal?
  notes    String?

  recipe     Recipe     @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  ingredient Ingredient @relation(fields: [ingredientId], references: [id], onDelete: Cascade)

  @@id([recipeId, ingredientId])
}

model WeekPlan {
  id        String   @id @default(uuid())
  weekStart DateTime @unique
  weekIndexId String? @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  entries WeekPlanEntry[]
  weekIndex WeekIndex? @relation(fields: [weekIndexId], references: [id], onDelete: Cascade)
}

model WeekIndex {
  id        String   @id @default(uuid())
  weekStart DateTime @unique
  createdAt DateTime @default(now())

  plan WeekPlan?
}

model WeekPlanEntry {
  id         String @id @default(uuid())
  weekPlanId String
  dayIndex   Int
  recipeId   String

  weekPlan WeekPlan @relation(fields: [weekPlanId], references: [id], onDelete: Cascade)
  recipe   Recipe   @relation(fields: [recipeId], references: [id], onDelete: Cascade)

  @@unique([weekPlanId, dayIndex])
}
