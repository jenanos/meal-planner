datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Household {
  id   String @id @default(uuid())
  name String

  recipes    Recipe[]
  plans      MealPlan[]
  Ingredient Ingredient[]
}

model Recipe {
  id          String    @id @default(uuid())
  householdId String
  household   Household @relation(fields: [householdId], references: [id], onDelete: Cascade)
  title       String
  diet        String
  active      Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  planItems   MealPlanItem[]
  ingredients RecipeIngredient[]
}

model MealPlan {
  id          String    @id @default(uuid())
  householdId String
  household   Household @relation(fields: [householdId], references: [id], onDelete: Cascade)
  weekStart   DateTime

  items MealPlanItem[]
}

model MealPlanItem {
  id       String   @id @default(uuid())
  planId   String
  plan     MealPlan @relation(fields: [planId], references: [id], onDelete: Cascade)
  day      String
  recipeId String?
  recipe   Recipe?  @relation(fields: [recipeId], references: [id])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
}

model Ingredient {
  id          String             @id @default(uuid())
  householdId String
  household   Household          @relation(fields: [householdId], references: [id], onDelete: Cascade)
  name        String
  recipes     RecipeIngredient[]
  createdAt   DateTime           @default(now())
  updatedAt   DateTime           @updatedAt

  @@unique([householdId, name], name: "Ingredient_householdId_name_key")
}

model RecipeIngredient {
  recipeId     String
  ingredientId String
  quantity     Float?
  unit         String?

  recipe     Recipe     @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  ingredient Ingredient @relation(fields: [ingredientId], references: [id], onDelete: Cascade)

  @@id([recipeId, ingredientId])
}
