version: "3.9"

volumes:
  postgres-data:

networks:
  internal:
    driver: bridge

services:
  postgres:
    image: postgres:16
    restart: unless-stopped
    env_file:
      - .env.production
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-meal_planner}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?POSTGRES_PASSWORD env var is required}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - internal

  api:
    build:
      context: .
      dockerfile: apps/server/Dockerfile
    restart: unless-stopped
    env_file:
      - .env.production
    environment:
      NODE_ENV: production
      PORT: 4000
      DATABASE_URL: ${DATABASE_URL:-postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-meal_planner}}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - internal

  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
      args:
        NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-https://meals.jenanos.xyz}
    restart: unless-stopped
    env_file:
      - apps/web/.env.production
    environment:
      NODE_ENV: production
      API_URL: ${API_URL:-http://api:4000}
    depends_on:
      api:
        condition: service_started
    networks:
      - internal
